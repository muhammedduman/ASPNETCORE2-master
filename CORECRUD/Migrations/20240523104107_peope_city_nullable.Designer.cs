// <auto-generated />
using CORECRUD.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CORECRUD.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240523104107_peope_city_nullable")]
    partial class peope_city_nullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CORECRUD.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Description1")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.Property<string>("Description2")
                        .IsRequired()
                        .HasColumnType("VARCHAR(5000)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Department_");
                });

            modelBuilder.Entity("CORECRUD.Models.People", b =>
                {
                    b.Property<int>("PeopleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeopleID"));

                    b.Property<string>("City")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("PeopleID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("People_");
                });

            modelBuilder.Entity("CORECRUD.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("User_");
                });

            modelBuilder.Entity("CORECRUD.Models.People", b =>
                {
                    b.HasOne("CORECRUD.Models.Department", "_Depart")
                        .WithMany("_People")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_Depart");
                });

            modelBuilder.Entity("CORECRUD.Models.Department", b =>
                {
                    b.Navigation("_People");
                });
#pragma warning restore 612, 618
        }
    }
}
